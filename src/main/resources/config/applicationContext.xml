<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
http://www.springframework.org/schema/context   
http://www.springframework.org/schema/context/spring-context-3.0.xsd  
http://www.springframework.org/schema/mvc   
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 扫描业务层 组件 -->
	<context:component-scan base-package="com.study.service"></context:component-scan>

 	 <!-- 引入jdbc配置文件 -->    
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
               <value>classpath:properties/*.properties</value>  
                <!--要是有多个配置文件，只需在这里继续添加即可 -->  
            </list>  
        </property>  
    </bean>  
    
	<!-- c3p0数据连接池 -->
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.driver}"></property>
		<property name="jdbcUrl" value="${db.url}" /> 
        <property name="user" value="${db.username}" />  
        <property name="password" value="${db.password}" />  
        
		<property name="minPoolSize" value="1"></property>
		<property name="maxPoolSize" value="5"></property>
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->   
		<property name="initialPoolSize" value="3"></property>
		 <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->   
		<property name="acquireIncrement" value="3"></property>
	</bean>

	<!-- druid数据连接池 -->  
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
       <property name="url" value="${db.url}" />  
       <property name="username" value="${db.username}" />  
       <property name="password" value="${db.password}" />  
       <property name="driverClassName" value="${db.driver}" />  
       <property name="maxActive" value="10" />  
       <property name="minIdle" value="5" />  
    </bean>
    -->
    
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源 -->  
		<property name="dataSource" ref="dataSource"/>
	</bean>
	 <!-- 通知 -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
       <tx:attributes>  
           <!-- 传播行为 -->  
           <tx:method name="save*" propagation="REQUIRED" />  
           <tx:method name="insert*" propagation="REQUIRED" />  
           <tx:method name="add*" propagation="REQUIRED" />  
           <tx:method name="create*" propagation="REQUIRED" />  
           <tx:method name="delete*" propagation="REQUIRED" />  
           <tx:method name="update*" propagation="REQUIRED" />  
           <tx:method name="find*" propagation="SUPPORTS" read-only="true" />  
           <tx:method name="select*" propagation="SUPPORTS" read-only="true" />  
           <tx:method name="get*" propagation="SUPPORTS" read-only="true" />  
       </tx:attributes>  
    </tx:advice>  
    
    
	<!-- 使用注解来控制事物 -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
	
	<!-- 配置sqlsessionFactory -->  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池--> 
		<property name="dataSource" ref="dataSource"></property>  
		<!--configLocation属性指定mybatis的核心配置文件-->   
		<property name="configLocation" value="classpath:mybatis/config.xml"></property>  
		 <!-- 所有配置的mapper文件 --> 
		<property name="mapperLocations" value="classpath*:mapper/*.xml"></property>  
	</bean>

	<!-- 扫描生成所有dao层对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.study.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
	</bean>
</beans>